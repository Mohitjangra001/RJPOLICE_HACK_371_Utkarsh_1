{"ast":null,"code":"var _jsxFileName = \"/Users/lakshyadeepgogoi/Downloads/FeedbackappReact-main/src/context/FeedbackContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FeedbackContext = /*#__PURE__*/createContext();\nexport const FeedbackProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [isLoading, setIsLoading] = useState(true);\n  const [feedback, setFeedback] = useState([]);\n  const [feedbackEdit, setFeedbackEdit] = useState({\n    item: {},\n    edit: false\n  });\n  useEffect(() => {\n    fetchFeedback();\n  }, []);\n\n  // Fetch feedback\n  const fetchFeedback = async () => {\n    try {\n      const response = await fetch(`/feedback?_sort=id&_order=desc`);\n      const data = await response.json();\n      setFeedback(data);\n      setIsLoading(false);\n    } catch (error) {\n      console.error(\"Error fetching feedback:\", error);\n      // Handle the error (e.g., show a message to the user)\n    }\n  };\n\n  // Add feedback\n  const addFeedback = async newFeedback => {\n    try {\n      const response = await fetch(\"/feedback\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(newFeedback)\n      });\n      const data = await response.json();\n      setFeedback([data, ...feedback]);\n    } catch (error) {\n      console.error(\"Error adding feedback:\", error);\n      // Handle the error (e.g., show a message to the user)\n    }\n  };\n\n  // Delete feedback\n  const deleteFeedback = async id => {\n    if (window.confirm(\"Are you sure you want to delete\")) {\n      try {\n        await fetch(`/feedback/${id}`, {\n          method: \"DELETE\"\n        });\n        setFeedback(feedback.filter(item => item.id !== id));\n      } catch (error) {\n        console.error(\"Error deleting feedback:\", error);\n        // Handle the error (e.g., show a message to the user)\n      }\n    }\n  };\n\n  // Update feedback item\n  const updateFeedback = async (id, updItem) => {\n    try {\n      const response = await fetch(`/feedback/${id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(updItem)\n      });\n      const data = await response.json();\n      setFeedback(feedback.map(item => item.id === id ? {\n        ...item,\n        ...data\n      } : item));\n    } catch (error) {\n      console.error(\"Error updating feedback:\", error);\n      // Handle the error (e.g., show a message to the user)\n    }\n  };\n\n  // Set item to be updated\n  const editFeedback = item => {\n    setFeedbackEdit({\n      item,\n      edit: true\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(FeedbackContext.Provider, {\n    value: {\n      feedback,\n      feedbackEdit,\n      isLoading,\n      deleteFeedback,\n      addFeedback,\n      editFeedback,\n      updateFeedback\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s(FeedbackProvider, \"0D9cn4bOhkltnm6JCvm1TB1aRQg=\");\n_c = FeedbackProvider;\nexport const useFeedbackContext = () => {\n  _s2();\n  return useContext(FeedbackContext);\n};\n_s2(useFeedbackContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport default FeedbackContext;\nvar _c;\n$RefreshReg$(_c, \"FeedbackProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","FeedbackContext","FeedbackProvider","children","isLoading","setIsLoading","feedback","setFeedback","feedbackEdit","setFeedbackEdit","item","edit","fetchFeedback","response","fetch","data","json","error","console","addFeedback","newFeedback","method","headers","body","JSON","stringify","deleteFeedback","id","window","confirm","filter","updateFeedback","updItem","map","editFeedback","useFeedbackContext"],"sources":["/Users/lakshyadeepgogoi/Downloads/FeedbackappReact-main/src/context/FeedbackContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from \"react\";\n\nconst FeedbackContext = createContext();\n\nexport const FeedbackProvider = ({ children }) => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [feedback, setFeedback] = useState([]);\n  const [feedbackEdit, setFeedbackEdit] = useState({\n    item: {},\n    edit: false,\n  });\n\n  useEffect(() => {\n    fetchFeedback();\n  }, []);\n\n  // Fetch feedback\n  const fetchFeedback = async () => {\n    try {\n      const response = await fetch(`/feedback?_sort=id&_order=desc`);\n      const data = await response.json();\n\n      setFeedback(data);\n      setIsLoading(false);\n    } catch (error) {\n      console.error(\"Error fetching feedback:\", error);\n      // Handle the error (e.g., show a message to the user)\n    }\n  };\n\n  // Add feedback\n  const addFeedback = async (newFeedback) => {\n    try {\n      const response = await fetch(\"/feedback\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(newFeedback),\n      });\n\n      const data = await response.json();\n\n      setFeedback([data, ...feedback]);\n    } catch (error) {\n      console.error(\"Error adding feedback:\", error);\n      // Handle the error (e.g., show a message to the user)\n    }\n  };\n\n  // Delete feedback\n  const deleteFeedback = async (id) => {\n    if (window.confirm(\"Are you sure you want to delete\")) {\n      try {\n        await fetch(`/feedback/${id}`, { method: \"DELETE\" });\n\n        setFeedback(feedback.filter((item) => item.id !== id));\n      } catch (error) {\n        console.error(\"Error deleting feedback:\", error);\n        // Handle the error (e.g., show a message to the user)\n      }\n    }\n  };\n\n  // Update feedback item\n  const updateFeedback = async (id, updItem) => {\n    try {\n      const response = await fetch(`/feedback/${id}`, {\n        method: \"PUT\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(updItem),\n      });\n\n      const data = await response.json();\n\n      setFeedback(\n        feedback.map((item) => (item.id === id ? { ...item, ...data } : item))\n      );\n    } catch (error) {\n      console.error(\"Error updating feedback:\", error);\n      // Handle the error (e.g., show a message to the user)\n    }\n  };\n\n  // Set item to be updated\n  const editFeedback = (item) => {\n    setFeedbackEdit({\n      item,\n      edit: true,\n    });\n  };\n\n  return (\n    <FeedbackContext.Provider\n      value={{\n        feedback,\n        feedbackEdit,\n        isLoading,\n        deleteFeedback,\n        addFeedback,\n        editFeedback,\n        updateFeedback,\n      }}\n    >\n      {children}\n    </FeedbackContext.Provider>\n  );\n};\n\nexport const useFeedbackContext = () => useContext(FeedbackContext);\n\nexport default FeedbackContext;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}